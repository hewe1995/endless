<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.endless.user.dao.interfac.SubscriberDao">
	<resultMap id="BaseResultMap" type="org.endless.user.domain.Subscriber">
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="login" jdbcType="VARCHAR" property="login" />
		<result column="passwd" jdbcType="VARCHAR" property="passwd" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="salt" jdbcType="VARCHAR" property="salt" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, email, login, passwd, phone,salt
	</sql>
	<select id="selectByExample" parameterType="org.endless.user.domain.SubscriberExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from subscriber
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="limit != null">
			<if test="offset != null">
				limit ${offset}, ${limit}
			</if>
			<if test="offset == null">
				limit ${limit}
			</if>
		</if>
		<if test="limit != null">
			<if test="offset != null">
				limit ${offset}, ${limit}
			</if>
			<if test="offset == null">
				limit ${limit}
			</if>
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from subscriber
		where id = #{id,jdbcType=VARCHAR}
	</select>

	<select id="selectByidentity" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from subscriber
		where phone = #{identity,jdbcType=VARCHAR} or login
		= #{identity,jdbcType=VARCHAR}
	</select>
	<insert id="insert" parameterType="org.endless.user.domain.Subscriber">
		insert into subscriber
		(id,email, login, passwd,
		phone,salt)
		values (#{id,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{login,jdbcType=VARCHAR},
		#{passwd,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR},
		#{salt,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="org.endless.user.domain.Subscriber">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into subscriber
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="email != null">
				email,
			</if>
			<if test="login != null">
				login,
			</if>
			<if test="passwd != null">
				passwd,
			</if>
			<if test="phone != null">
				phone,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="login != null">
				#{login,jdbcType=VARCHAR},
			</if>
			<if test="passwd != null">
				#{passwd,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="org.endless.user.domain.SubscriberExample"
		resultType="java.lang.Long">
		select count(*) from subscriber
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update subscriber
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=VARCHAR},
			</if>
			<if test="record.email != null">
				email = #{record.email,jdbcType=VARCHAR},
			</if>
			<if test="record.login != null">
				login = #{record.login,jdbcType=VARCHAR},
			</if>
			<if test="record.passwd != null">
				passwd = #{record.passwd,jdbcType=VARCHAR},
			</if>
			<if test="record.phone != null">
				phone = #{record.phone,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update subscriber
		set id = #{record.id,jdbcType=VARCHAR},
		email =
		#{record.email,jdbcType=VARCHAR},
		login =
		#{record.login,jdbcType=VARCHAR},
		passwd =
		#{record.passwd,jdbcType=VARCHAR},
		phone =
		#{record.phone,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="org.endless.user.domain.Subscriber">
		update subscriber
		<set>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="login != null">
				login = #{login,jdbcType=VARCHAR},
			</if>
			<if test="passwd != null">
				passwd = #{passwd,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.endless.user.domain.Subscriber">
		update subscriber
		set email = #{email,jdbcType=VARCHAR},
		login =
		#{login,jdbcType=VARCHAR},
		passwd = #{passwd,jdbcType=VARCHAR},
		phone =
		#{phone,jdbcType=VARCHAR}
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<insert id="insertBatch" parameterType="java.util.List">
		insert into subscriber
		(id,email, login, passwd,
		phone,salt)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.id,jdbcType=VARCHAR},
			#{item.email,jdbcType=VARCHAR},
			#{item.login,jdbcType=VARCHAR},
			#{item.passwd,jdbcType=VARCHAR},
			#{item.phone,jdbcType=VARCHAR},
			#{item.salt,jdbcType=VARCHAR})
		</foreach>
	</insert>

</mapper>