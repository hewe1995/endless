<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:c="http://www.springframework.org/schema/c"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

	<bean id="redis2Configurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath*:*.properties" />
	</bean>
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig"
		p:maxTotal="${redis.pool.maxTotal}" p:maxIdle="${redis.pool.maxIdle}"
		p:testOnBorrow="${redis.pool.testOnBorrow}" />

	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:host-name="${redis.host}" p:port="${redis.port}" p:use-pool="true"
		p:password="${redis.password}" p:timeout="${redis.timeout}"
		p:poolConfig-ref="poolConfig" />

	<bean id="stringRedisSerializer"
		class="org.springframework.data.redis.serializer.StringRedisSerializer" />
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
		p:connection-factory-ref="jedisConnectionFactory" p:keySerializer-ref="stringRedisSerializer"
		p:hashKeySerializer-ref="stringRedisSerializer"  />
	<!-- declare Redis Cache Manager -->
	<bean id="springCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager"
		c:redisOperations-ref="redisTemplate" p:usePrefix="true">
		<property name="expires">
			<map>
				<entry key="hewe" value="2000" />
			</map>
		</property>
	</bean>
</beans>